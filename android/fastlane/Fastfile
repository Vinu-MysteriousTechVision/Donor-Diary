# This file contains the fastlane.tools configuration
# You can find the documentation at https://docs.fastlane.tools
#
# For a list of all available actions, check out
#
#     https://docs.fastlane.tools/actions
#

# Uncomment the line if you want fastlane to automatically update itself
# update_fastlane

default_platform(:android)

platform :android do
  ############################## PRE ##############################

  before_all do
    ensure_git_branch(
      branch: 'develop'
    )
    git_branch
    # ensure_git_status_clean
    git_pull
  end

  desc "Runs all the tests"
  lane :test do
    gradle(task: "test")
  end

  desc "Builds and pushes version to app - use versionChange:[major|minor|patch] for versioning"
  lane :build do |options|
    if (options[:incrementVersion]=='patch')
      gradle(task: "doBuildVersionIncrement")
      gradle(task: "doPatchVersionIncrement")
      gradle(task: "clean")
      gradle(task: "assembleRelease")
    elsif (options[:incrementVersion]=='minor')
      gradle(task: "doBuildVersionIncrement")
      gradle(task: "doMinorVersionIncrement")
      gradle(task: "clean")
      gradle(task: "assembleRelease")
    elsif (options[:incrementVersion]=='major')
      gradle(task: "doBuildVersionIncrement")
      gradle(task: "doMajorVersionIncrement")
      # gradle(task: "clean")
      # gradle(task: "assembleRelease")
    else
      gradle(task: "doBuildVersionIncrement")
      gradle(task: "clean")
      gradle(task: "assembleRelease")
    end
    git_commit(path: ".", message: "Version incremeneted")
    push_to_git_remote
  end

  desc "Deploy a new version to the Google Play"
  lane :deploy do
    gradle(task: "assembleRelease")
    upload_to_play_store
  end

  desc "build and upload to Play Store"
  lane :submit_to_release do |options|
    build incrementVersion:options[:incrementVersion]
    deploy
  end

  error do |lane, exception|
  # This block is called if there was an error running a lane.
  end

end
